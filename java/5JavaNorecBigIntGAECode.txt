package fibo;

import java.io.IOException;
import java.util.Date;
import java.math.BigInteger;

import javax.servlet.AsyncContext;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.google.appengine.api.datastore.DatastoreService;
import com.google.appengine.api.datastore.DatastoreServiceFactory;
import com.google.appengine.api.datastore.Entity;

@WebServlet(name = "HelloAppEngine", urlPatterns = { "/hello" }, asyncSupported = true)
public class HelloAppEngine extends HttpServlet {

	private static BigInteger Fibonacci(int n) {
		BigInteger FiboResult = BigInteger.valueOf(0),next_result= BigInteger.valueOf(1), prev_result = BigInteger.valueOf(1);
	    if(n == 1 || n == 2) 
	    	FiboResult = BigInteger.valueOf(1);
	    else {
	    	for(int i = 3; i <= n; i++) {
	    		FiboResult = prev_result.add(next_result);
		    	prev_result = next_result;
		    	next_result = FiboResult;
	    	}
    	}
	    return FiboResult;
	}

	private static long FiboTime(int fiboIndex) {
		long startTime = 0, endTime = 0, totalTime = 0;
		startTime = System.nanoTime();
		BigInteger Fibo = Fibonacci(fiboIndex);
		endTime = System.nanoTime();
		totalTime = (endTime - startTime)/1000000; 
		return totalTime;
	}

	public void dataStore(long totalTime, int fiboIndex) {
		Entity fiboTime = new Entity("javaFiboTime");
		fiboTime.setProperty("FiboIndex", fiboIndex);
		fiboTime.setProperty("Timestamp", new Date());
		fiboTime.setProperty("Results", totalTime);

		DatastoreService datastore = DatastoreServiceFactory.getDatastoreService();
		datastore.put(fiboTime);
	}

	@Override
	public void doGet(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException {

		response.setContentType("text/plain");
		response.setCharacterEncoding("UTF-8");
		long totalTime = 0;
		int fiboIndex = 10000; 
		for (int flag = 1; flag <= 30; flag++) {			
			try {
				totalTime = FiboTime(fiboIndex);
				dataStore(totalTime, fiboIndex);
				Thread.sleep(20000);
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
		response.getWriter().print("doGet enter Success");
	}

}